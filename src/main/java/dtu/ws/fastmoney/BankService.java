
package dtu.ws.fastmoney;

import java.math.BigDecimal;
import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "BankService", targetNamespace = "http://fastmoney.ws.dtu/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface BankService {


    /**
     * 
     * @param arg0
     * @throws BankServiceException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "retireAccount", targetNamespace = "http://fastmoney.ws.dtu/", className = "dtu.ws.fastmoney.RetireAccount")
    @ResponseWrapper(localName = "retireAccountResponse", targetNamespace = "http://fastmoney.ws.dtu/", className = "dtu.ws.fastmoney.RetireAccountResponse")
    @Action(input = "http://fastmoney.ws.dtu/BankService/retireAccountRequest", output = "http://fastmoney.ws.dtu/BankService/retireAccountResponse", fault = {
        @FaultAction(className = BankServiceException_Exception.class, value = "http://fastmoney.ws.dtu/BankService/retireAccount/Fault/BankServiceException")
    })
    public void retireAccount(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws BankServiceException_Exception
    ;

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @throws BankServiceException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "transferMoneyFromTo", targetNamespace = "http://fastmoney.ws.dtu/", className = "dtu.ws.fastmoney.TransferMoneyFromTo")
    @ResponseWrapper(localName = "transferMoneyFromToResponse", targetNamespace = "http://fastmoney.ws.dtu/", className = "dtu.ws.fastmoney.TransferMoneyFromToResponse")
    @Action(input = "http://fastmoney.ws.dtu/BankService/transferMoneyFromToRequest", output = "http://fastmoney.ws.dtu/BankService/transferMoneyFromToResponse", fault = {
        @FaultAction(className = BankServiceException_Exception.class, value = "http://fastmoney.ws.dtu/BankService/transferMoneyFromTo/Fault/BankServiceException")
    })
    public void transferMoneyFromTo(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        BigDecimal arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3)
        throws BankServiceException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns dtu.ws.fastmoney.Account
     * @throws BankServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAccount", targetNamespace = "http://fastmoney.ws.dtu/", className = "dtu.ws.fastmoney.GetAccount")
    @ResponseWrapper(localName = "getAccountResponse", targetNamespace = "http://fastmoney.ws.dtu/", className = "dtu.ws.fastmoney.GetAccountResponse")
    @Action(input = "http://fastmoney.ws.dtu/BankService/getAccountRequest", output = "http://fastmoney.ws.dtu/BankService/getAccountResponse", fault = {
        @FaultAction(className = BankServiceException_Exception.class, value = "http://fastmoney.ws.dtu/BankService/getAccount/Fault/BankServiceException")
    })
    public Account getAccount(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws BankServiceException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns dtu.ws.fastmoney.Account
     * @throws BankServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAccountByCprNumber", targetNamespace = "http://fastmoney.ws.dtu/", className = "dtu.ws.fastmoney.GetAccountByCprNumber")
    @ResponseWrapper(localName = "getAccountByCprNumberResponse", targetNamespace = "http://fastmoney.ws.dtu/", className = "dtu.ws.fastmoney.GetAccountByCprNumberResponse")
    @Action(input = "http://fastmoney.ws.dtu/BankService/getAccountByCprNumberRequest", output = "http://fastmoney.ws.dtu/BankService/getAccountByCprNumberResponse", fault = {
        @FaultAction(className = BankServiceException_Exception.class, value = "http://fastmoney.ws.dtu/BankService/getAccountByCprNumber/Fault/BankServiceException")
    })
    public Account getAccountByCprNumber(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws BankServiceException_Exception
    ;

    /**
     * 
     * @return
     *     returns java.util.List<dtu.ws.fastmoney.AccountInfo>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAccounts", targetNamespace = "http://fastmoney.ws.dtu/", className = "dtu.ws.fastmoney.GetAccounts")
    @ResponseWrapper(localName = "getAccountsResponse", targetNamespace = "http://fastmoney.ws.dtu/", className = "dtu.ws.fastmoney.GetAccountsResponse")
    @Action(input = "http://fastmoney.ws.dtu/BankService/getAccountsRequest", output = "http://fastmoney.ws.dtu/BankService/getAccountsResponse")
    public List<AccountInfo> getAccounts();

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws BankServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createAccountWithBalance", targetNamespace = "http://fastmoney.ws.dtu/", className = "dtu.ws.fastmoney.CreateAccountWithBalance")
    @ResponseWrapper(localName = "createAccountWithBalanceResponse", targetNamespace = "http://fastmoney.ws.dtu/", className = "dtu.ws.fastmoney.CreateAccountWithBalanceResponse")
    @Action(input = "http://fastmoney.ws.dtu/BankService/createAccountWithBalanceRequest", output = "http://fastmoney.ws.dtu/BankService/createAccountWithBalanceResponse", fault = {
        @FaultAction(className = BankServiceException_Exception.class, value = "http://fastmoney.ws.dtu/BankService/createAccountWithBalance/Fault/BankServiceException")
    })
    public String createAccountWithBalance(
        @WebParam(name = "arg0", targetNamespace = "")
        User arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        BigDecimal arg1)
        throws BankServiceException_Exception
    ;

}
